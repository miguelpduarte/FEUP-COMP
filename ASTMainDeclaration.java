/* Generated By:JJTree: Do not edit this line. ASTMainDeclaration.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public class ASTMainDeclaration extends MethodDeclarationNode {
  protected String arg_name;

  public ASTMainDeclaration(int id) {
    super(id);
    // So that it can be used in the superclass
    this.name = "main";
    // The return value of main is always the same
    this.ret = new VariableType("void");
  }

  public ASTMainDeclaration(JMMParser p, int id) {
    super(p, id);
    // So that it can be used in the superclass
    this.name = "main";
    // The return value of main is always the same
    this.ret = new VariableType("void");
  }

  @Override
  protected void buildSymbolTable() {
    // TODO: Register method parameters because they are local reference

    // First children are directly var declarations because the rest is always the same (return and args)
    for (int i = 0; i < children.length; ++i) {
      if (children[i] instanceof DeclarationNode) {
        this.registerInSymbolTable(children[i]);
      } else {
        // The declarations are all sequential in the start of the method code
        break;
      }
    }
  }

  @Override
  public void prepareInternalInfo() {
    this.params = new Variable[] {new Variable(new VariableType("String[]"), new VariableIdentifier(this.arg_name))};
  }
}
/* JavaCC - OriginalChecksum=8a4e52ddec71c519a361c616e3c2c9f6 (do not edit this line) */
