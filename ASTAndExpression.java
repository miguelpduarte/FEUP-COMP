/* Generated By:JJTree: Do not edit this line. ASTAndExpression.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTAndExpression extends SimpleNode implements Typed {
  private VariableType type;
  private int label_number;

  public ASTAndExpression(int id) {
    super(id);
  }

  public ASTAndExpression(JMMParser p, int id) {
    super(p, id);
  }

  @Override
  public String getNodeName() {
    return "&&";
  }

  @Override
  public VariableType getType() {
    return type;
  }

  @Override
  protected void applySemanticAnalysis() throws SemanticError {
    VariableType lhs = ((Typed) children[0]).getType();
    VariableType rhs = ((Typed) children[1]).getType();
    if (!((lhs.isBoolean() || lhs.isIgnored()) && (rhs.isBoolean() || rhs.isIgnored()))) {
      throw new SemanticError(this.line, String.format("Invalid operand types %s and %s for operator &&", lhs, rhs));
    }

    // Calculate own type
    this.type = new VariableType("boolean");
  }

  @Override
  protected void generateCodeNodeOpen(StringBuilder sb) {
    this.label_number = LabelGenerator.nextCustomLabelNr();
  }

  @Override
  protected void generateCodeChildNodeClose(StringBuilder sb) {
    // If false, jump to the end, where false is pushed into the stack
    sb.append("\tifeq false_").append(this.label_number).append("\n");
  }

  @Override
  protected void generateCodeNodeClose(StringBuilder sb) {
    // All the checks for false passed, push true into the stack and exit
    // Also add the other labels to jump to (exiting the if - after pushing a true - and pushing a false)
    sb.append("\ticonst_1\n");
    sb.append("\tgoto done_").append(this.label_number).append("\n");

    // In case any check is false, adding false to the stack with a label previously
    sb.append("false_").append(this.label_number).append(":\n");
    sb.append("\ticonst_0\n");

    // After pushing a true, jump out of the if
    sb.append("done_").append(this.label_number).append(":\n");
  }
}
/* JavaCC - OriginalChecksum=fae167255531a69eed62ec05b1af74e6 (do not edit this line) */
