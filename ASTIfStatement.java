/* Generated By:JJTree: Do not edit this line. ASTIfStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTIfStatement extends SimpleNode {
  private String else_label;
  private String endif_label;

  public ASTIfStatement(int id) {
    super(id);
  }

  public ASTIfStatement(JMMParser p, int id) {
    super(p, id);
  }

  @Override
  public String getNodeName() {
    return "if";
  }

  @Override
  protected void applySemanticAnalysis() throws SemanticError {    
    VariableType lhs = ((Typed) children[0]).getType();

    if (!(lhs.isBoolean() || lhs.isIgnored())) {
      throw new SemanticError(this.line, String.format("Invalid type '%s' in If statement (expected boolean)", lhs));
    }
  }

  @Override
  protected void generateCodeNodeOpen(StringBuilder sb) {
    final int label_number = LabelGenerator.nextCustomLabelNr();
    this.else_label = "else_" + label_number;
    this.endif_label = "endif_" + label_number;
  }

  public String getElseLabel() {
    return else_label;
  }

  public String getEndIfLabel() {
    return endif_label;
  }

  @Override
  protected void generateCodeNodeClose(StringBuilder sb) {
    sb.append(this.endif_label).append(":\n");
  }
}
/* JavaCC - OriginalChecksum=9ed097da38d478f44445fd26ec1e8f5d (do not edit this line) */
