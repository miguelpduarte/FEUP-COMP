/* Generated By:JJTree: Do not edit this line. ASTDotExpression.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTDotExpression extends SimpleNode implements Typed {
  private VariableType type;

  public ASTDotExpression(int id) {
    super(id);
  }

  public ASTDotExpression(JMMParser p, int id) {
    super(p, id);
  }

  @Override
  public String getNodeName() {
    return ".";
  }

  @Override
  public VariableType getType() {
    return type;
  }

  @Override
  protected void applySemanticAnalysis() throws SemanticError {
    Node lhs_raw = children[0];

    if (!(lhs_raw instanceof ASTIdentifier || lhs_raw instanceof ASTNewExpression || lhs_raw instanceof ASTThis)) {
      throw new SemanticError(this.line, "Left hand side of dot operator is not an Identifier, new Expression or 'this'!");
    }

    VariableType lhs = ((Typed) lhs_raw).getType();

    if (!lhs.equals(this.parser.class_type)) {
      // The type of the left-hand side is not of a know class, assumming that it's correct
      this.type = new VariableType(VariableType.ignored_type);
      return;
    }

    // Verifying the method via name and arguments
  }
}
/* JavaCC - OriginalChecksum=9e551656e978f3b2ea8f9c6934c8e272 (do not edit this line) */
